steps:
  - id: prepare-secret
    name: gcr.io/cloud-builders/gcloud
    waitFor: ['-']
    entrypoint: bash
    args:
      - -c
      - |
        gcloud secrets versions access latest --project=${PROJECT_ID} --secret=${_APP_NAME}-${_ENV}-env --format='get(payload.data)' | tr '_-' '/+' | base64 -d > .env

  - id: prepare-socket-folder
    name: gcr.io/cloud-builders/gcloud
    waitFor: ['-']
    entrypoint: bash
    args:
      - -c
      - |
        mkdir /cloudsql || true
        chmod -R 777 /cloudsql
    volumes:
      - name: cloudsql
        path: /cloudsql

  - id: start-cloudsql-proxy
    name: '${_CLOUD_SQL_PROXY_IMAGE_NAME}'
    waitFor: [prepare-socket-folder]
    args:
      - /cloud_sql_proxy
      - -dir=/cloudsql
      - '-instances=${_CLOUD_SQL_INSTANCES}'
    volumes:
      - name: cloudsql
        path: /cloudsql

  - id: migrate-database
    name: gcr.io/cloud-builders/yarn:node-20.11.0
    entrypoint: bash
    waitFor: [prepare-secret, prepare-socket-folder]
    args:
      - -c
      - |
        mv package.json package.json.bak && echo '{"dependencies": {"drizzle-orm": "0.31.2","drizzle-kit": "0.22.8","mysql2": "3.9.6"}}' > package.json && yarn && yarn drizzle-kit migrate
    volumes:
      - name: cloudsql
        path: /cloudsql

  - id: setup-tbls
    name: gcr.io/cloud-builders/go
    entrypoint: bash
    args:
      - -c
      - |
        go install github.com/k1LoW/tbls@latest

  - id: run-tbls-doc
    name: gcr.io/cloud-builders/go
    entrypoint: bash
    args:
      - -c
      - |
        export DATABASE=tbls_demo_box
        tbls doc --force

  - id: commit-and-push
    name: gcr.io/cloud-builders/git
    entrypoint: bash
    args:
      - -c
      - |
        git add .
        git config user.name github-actions
        git config user.email github-actions[bot]@users.noreply.github.com
        git commit -m "update tbls doc"
        git push

  - id: kill-cloudsql-proxy
    name: gcr.io/cloud-builders/docker
    waitFor: [migrate-database]
    entrypoint: sh
    args:
      - -c
      - 'docker ps -q --filter ancestor="${_CLOUD_SQL_PROXY_IMAGE_NAME}" | xargs docker stop'

substitutions:
  _ENV:
  _APP_NAME: drizzle-migration
  _CLOUD_SQL_INSTANCES: tbls:asia-northeast1:tbls-apps
  _CLOUD_SQL_PROXY_IMAGE_NAME: gcr.io/cloudsql-docker/gce-proxy:1.35.4
timeout: 900s
options:
  logging: CLOUD_LOGGING_ONLY